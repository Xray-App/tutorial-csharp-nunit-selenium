# This is a basic workflow to help you get started with Actions

name: CI with Xray (cloud and server/DC)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3.0.3
        with:
          # SDK version to use. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: 7.0.3
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v0.0.0
      - name: setup-chromedriver
        uses: nanasess/setup-chromedriver@v1.0.1
      - name: Run tests
        run: |
          dotnet restore
          dotnet test -s nunit.runsettings
      - name: "Import results to Xray (server/DC)"
        uses: mikepenz/xray-action@v2.3.0
        with:
           username: ${{ secrets.JIRASERVER_USERNAME }}
           password: ${{ secrets.JIRASERVER_PASSWORD }}
           xrayCloud: "false"
           xrayBaseUrl: ${{ secrets.JIRASERVER_BASE_URL }}
           testFormat: "nunit"
           testPaths: "**/TestResults/*.xml"
           testPlanKey: "${{ secrets.XRAYSERVER_TEST_PLAN_KEY }}"
           projectKey: "${{ secrets.JIRASERVER_PROJECT_KEY }}"
      - name: "Import results to Xray (cloud)"
        uses: mikepenz/xray-action@v2.3.0
        with:
           username: "${{ secrets.XRAYCLOUD_CLIENT_ID }}"
           password: "${{ secrets.XRAYCLOUD_CLIENT_SECRET }}"
           xrayCloud: "true"
           testFormat: "nunit"
           testPaths: "**/TestResults/*.xml"
           testPlanKey: "${{ secrets.XRAYCLOUD_TEST_PLAN_KEY }}"
           projectKey: "${{ secrets.JIRACLOUD_PROJECT_KEY }}"
